#!/bin/sh
# Install FreePBX 13 on CentOS 7

set -ex

LIBDIR="/usr/lib"
if [ `uname -m` = "x86_64" -a -d /usr/lib64 ]
then
	LIBDIR="/usr/lib64"
fi

# this all has to be run as root
[ `whoami` != 'root' ] && exec sudo $0

# disable selinux
if [ -z "`sestatus |grep 'status: *disabled'`" ]
then
	echo "Disabling selinux..."
	sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux
	sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config
fi

if [ -z "`sestatus |grep 'status: *disabled'`" ]
then
	echo "Reboot and restart this script"
	exit 1
fi

# erase any previous configuration
rm -f /etc/amportal.conf

# update system
yum -y update yum
yum -y update
yum -y groupinstall core base "Development Tools"

yum -y install lynx mariadb-server mariadb php php-mysql php-mbstring tftp-server \
  httpd ncurses-devel sendmail sendmail-cf sox newt-devel libxml2-devel libtiff-devel \
  audiofile-devel gtk2-devel subversion kernel-devel git php-process crontabs cronie \
  cronie-anacron wget vim php-xml uuid-devel sqlite-devel net-tools gnutls-devel php-pear

# install legacy pear requirements
pear install Console_Getopt || echo "Pear Console_Getopt may already be installed"

# configure firewall
firewall-cmd --zone=public --add-port=80/tcp --permanent || echo "Warning: firewall not set"
firewall-cmd --reload || echo "Warning: firewall not restarted"

# enable and start mysql
systemctl enable mariadb.service
systemctl start mariadb
echo "The prompt will ask you for your current root password. Since you just installed MySQL, you most likely wonâ€™t have one, so leave it blank by pressing enter. Then the prompt will ask you if you want to set a root password. Do not set a root password. We secure the database automatically, as part of the install script.  Apart from that you can chose yes for the rest. This will remove some sample users and databases, disable remote root logins, and load these new rules so that MySQL immediately respects the changes we have made."

# enable and start apache
systemctl enable httpd.service
systemctl start httpd.service

# add asterisk user
adduser asterisk -M -c "Asterisk user" || echo "Asterisk user already created?"

# NOT INSTALLING DAHDI - presuming this is vm

# install pjproject
cd /usr/src
rm -rf pjproject-*
wget http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2
tar -xjvf pjproject-2.4.tar.bz2
rm -f pjproject-2.4.tar.bz2
cd pjproject-2.4
CFLAGS='-DPJ_HAS_IPV6=1' ./configure --prefix=/usr --enable-shared --disable-sound\
  --disable-resample --disable-video --disable-opencore-amr --libdir=/usr/lib64
make dep
make
make install

# install libjansson
cd /usr/src
rm -rf jansson*
wget -O jansson.tar.gz https://github.com/akheron/jansson/archive/v2.7.tar.gz
tar vxfz jansson.tar.gz
rm -f jansson.tar.gz
cd jansson-*
autoreconf -i
./configure --libdir=/usr/lib64
make
make install


# install asterisk
cd /usr/src
rm -rf asterisk*
wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-13-current.tar.gz
tar xvfz asterisk-13-current.tar.gz
rm -f asterisk-13-current.tar.gz
cd asterisk-*
contrib/scripts/install_prereq install
./configure --libdir=/usr/lib64
contrib/scripts/get_mp3_source.sh
make menuselect.makeopts
#menuselect/menuselect --enable cdr_mysql --enable EXTRA-SOUNDS-EN-GSM menuselect.makeopts
make
make install
make config
ldconfig
chkconfig asterisk off

# install extra sounds
cd /var/lib/asterisk/sounds
wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz
wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz
tar xvf asterisk-core-sounds-en-wav-current.tar.gz
rm -f asterisk-core-sounds-en-wav-current.tar.gz
tar xfz asterisk-extra-sounds-en-wav-current.tar.gz
rm -f asterisk-extra-sounds-en-wav-current.tar.gz
# Wideband Audio download
wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz
wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz
tar xfz asterisk-extra-sounds-en-g722-current.tar.gz
rm -f asterisk-extra-sounds-en-g722-current.tar.gz
tar xfz asterisk-core-sounds-en-g722-current.tar.gz
rm -f asterisk-core-sounds-en-g722-current.tar.gz

# set asterisk ownership
chown asterisk. /var/run/asterisk
chown -R asterisk. /etc/asterisk
chown -R asterisk. /var/{lib,log,spool}/asterisk
chown -R asterisk. /usr/lib64/asterisk
chown -R asterisk. /var/www/

# configure apache
sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php.ini
sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/httpd/conf/httpd.conf
sed -i 's/AllowOverride None/AllowOverride All/' /etc/httpd/conf/httpd.conf
systemctl restart httpd.service

# download and install freepbx
cd /usr/src
wget http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz
tar xfz freepbx-13.0-latest.tgz
rm -f freepbx-13.0-latest.tgz
cd freepbx
./start_asterisk start
./install -n

# install freepbx service
cat <<---- >/etc/systemd/system/freepbx.service
[Unit]
Description=FreePBX VoIP Server
After=mariadb.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/sbin/fwconsole start
ExecStop=/usr/sbin/fwconsole stop

[Install]
WantedBy=multi-user.target
---

systemctl enable freepbx.service
systemctl start freepbx
