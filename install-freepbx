#!/bin/sh
# Install FreePBX  - based somewhat on:  
# http://wiki.freepbx.org/display/HTGS/Installing+FreePBX+on+Centos+6.3

set -ex

[ `whoami` != 'root' ] && exec sudo $0

if ! which asterisk
then
	echo "Please install the version of asterisk you want to use first."
	exit 1
fi

if [ -z "`sestatus |grep 'status: *disabled'`" ]
then
	echo "Disabling selinux..."
	sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux
	echo 0 >/selinux/enforce
fi
if [ -z "`sestatus |grep 'status: *disabled'`" ]
then
	echo "Please reboot, then retry install"
	exit 1
fi

[ ! -d /usr/src ] && mkdir -p /usr/src
cd /usr/src

yum -y update

yum -y groupinstall core
yum -y groupinstall base

yum -y install gcc gcc-c++ lynx bison mysql-devel mysql-server php php-mysql php-pear php-mbstring tftp-server httpd make ncurses-devel libtermcap-devel sendmail sendmail-cf caching-nameserver sox newt-devel libxml2-devel libtiff-devel audiofile-devel gtk2-devel subversion kernel-devel git subversion kernel-devel php-process crontabs cronie cronie-anacron wget vim php-xml uuid-devel libtool sqlite-devel


# stole this from install-testsuite -- TODO: cleanup
#yum -y install automake PyYAML lua-devel libpcap-devel gcc-objc python-devel python-twisted git subversion libtiff-devel make wget openssl-devel ncurses-devel newt-devel libxml2-devel kernel-devel gcc gcc-c++ sqlite-devel libuuid-devel gtk2-devel gmime-devel gmime22-devel patch python-setuptools unixODBC-devel libcurl-devel libogg-devel libvorbis-devel speex-devel spandsp-devel freetds-devel net-snmp-devel iksemel-devel openais-devel popt-devel libtool-ltdl-devel libsqlite3x-devel radiusclient-ng-devel portaudio-devel postgresql-devel libresample-devel neon-devel libical-devel openldap-devel sqlite2-devel mysql-devel bluez-libs-devel jack-audio-connection-kit-devel Cython python-pip
#yum -y install libtool-ltdl-devel unixODBC unixODBC-devel mysql-connector-odbc

chkconfig iptables off
service iptables stop

pear channel-update pear.php.net
pear install db-1.7.14 || echo "Ignoring error that pear is already installed."

# skipping GV depenencies as it's obsolete

# skipping DAHDI as this is targetting a virtual server

# install asterisk (let caller pick version)
#$(eval echo ~${USER})/bin/ba -i || exit 1

# install extra sounds
wget -O - http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-gsm-current.tar.gz | tar xvfz - --directory=/var/lib/asterisk/sounds

# remove any existing configuration
if [ ! -d /etc/asterisk-before-freepbx ]
then
	echo "Saving copy of /etc/asterisk configuration to /etc/asterisk-before-freepbx..."
	mkdir /etc/asterisk-before-freepbx
	rsync -avr /etc/asterisk/. /etc/asterisk-before-freepbx/.
fi
rm -rf /etc/asterisk
mkdir /etc/asterisk

# get FreePBX
rm -rf freepbx
#export VER_FREEPBX=2.11
#svn co http://www.freepbx.org/v2/svn/freepbx/branches/${VER_FREEPBX} freepbx
#[ ! -d freepbx ] && echo "ERROR: freepbx directory missing after svn co" && exit 1
#cd freepbx

rm -f freepbx-*
wget http://mirror.freepbx.org/freepbx-12.0.3.tgz
tar xvfz freepbx-12.0.3.tgz
cd freepbx

[ -z "`grep '^asterisk:' /etc/passwd`" ] && adduser asterisk -M -d /var/lib/asterisk -s /sbin/nologin -c "Asterisk User"
chown asterisk. /var/run/asterisk
chown -R asterisk. /etc/asterisk
chown -R asterisk. /var/{lib,log,spool}/asterisk
chown -R asterisk. /usr/lib/asterisk

[ -d /var/www/html ] && (cd /var/www ; mv html html.$$)
[ ! -d /var/www/html ] && mkdir /var/www/html
chown -R asterisk. /var/www

[ ! -f /etc/httpd/conf/httpd.conf_orig ] && cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf_orig
sed -i 's/\(^upload_max_filesize =\).*/\120M/' /etc/php.ini
sed -i 's/\(^post_max_size =\).*/\120M/' /etc/php.ini
sed -i 's/\(^memory_limit =\).*/\1128M/' /etc/php.ini
sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/httpd/conf/httpd.conf
service httpd restart
service mysqld restart
chkconfig httpd on
chkconfig mysqld on

export ASTERISK_DB_PW=amp109
mysql -u root -e "DROP DATABASE asterisk;"
mysql -u root -e "DROP DATABASE asteriskcdrdb;"

mysqladmin -u root create asterisk
mysqladmin -u root create asteriskcdrdb
#mysql -u root asterisk < SQL/newinstall.sql
#mysql -u root asteriskcdrdb < SQL/cdr_mysql_table.sql

mysql -u root -e "GRANT ALL PRIVILEGES ON asterisk.* to asteriskuser@localhost IDENTIFIED BY '${ASTERISK_DB_PW}';"
mysql -u root -e "GRANT ALL PRIVILEGES ON asteriskcdrdb.* to asteriskuser@localhost IDENTIFIED BY '${ASTERISK_DB_PW}';"
mysql -u root -e "flush privileges;"

./start_asterisk start
./install_amp --installdb --username=asteriskuser --password=$ASTERISK_DB_PW
amportal chown
amportal a ma installall 
amportal a reload
amportal a ma refreshsignatures
amportal chown

ln -s /var/lib/asterisk/moh /var/lib/asterisk/mohmp3
amportal restart

